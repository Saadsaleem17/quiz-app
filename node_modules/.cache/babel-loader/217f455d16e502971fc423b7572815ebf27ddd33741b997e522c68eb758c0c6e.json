{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Desktop\\\\quiz app\\\\src\\\\views\\\\QuizView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { db, appId } from '../firebase/config';\nimport { doc, setDoc, getDoc, collection, getDocs, updateDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuizView = ({\n  quiz,\n  userId,\n  quizCode,\n  currentQuestionIndex,\n  selectedAnswer,\n  setSelectedAnswer,\n  setCurrentQuiz,\n  setView,\n  setQuizResults,\n  setCurrentQuestionIndex\n}) => {\n  _s();\n  const isHost = (quiz === null || quiz === void 0 ? void 0 : quiz.createdBy) === userId;\n  useEffect(() => {\n    setSelectedAnswer(null);\n  }, [currentQuestionIndex, setSelectedAnswer]);\n  if (!quiz || quiz.status === 'lobby' || !quiz.questions || !quiz.questions[currentQuestionIndex]) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-2xl\",\n      children: \"Waiting for the quiz to start...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this);\n  }\n  const question = quiz.questions[currentQuestionIndex];\n  const handleAnswerSubmit = async optionIndex => {\n    setSelectedAnswer(optionIndex);\n\n    // Handle demo mode - no Firebase operations\n    if (quizCode === 'DEMO' || quizCode === 'TEST') {\n      console.log(\"Demo mode: Answer submitted:\", optionIndex);\n      return;\n    }\n    const quizAnswersRef = collection(db, `/artifacts/${appId}/public/data/quizzes/${quizCode}/answers`);\n    const answerDocId = `${userId}_q${currentQuestionIndex}`;\n    try {\n      await setDoc(doc(quizAnswersRef, answerDocId), {\n        userId,\n        questionIndex: currentQuestionIndex,\n        answer: optionIndex,\n        timestamp: new Date()\n      });\n    } catch (error) {\n      console.error(\"Error submitting answer:\", error);\n    }\n  };\n  const handleNextQuestion = async () => {\n    const nextIndex = currentQuestionIndex + 1;\n\n    // Handle demo mode\n    if (quizCode === 'DEMO' || quizCode === 'TEST') {\n      if (nextIndex < quiz.questions.length) {\n        // Update the quiz state locally for demo mode\n        const updatedQuiz = {\n          ...quiz,\n          currentQuestionIndex: nextIndex\n        };\n        setCurrentQuiz(updatedQuiz);\n        setCurrentQuestionIndex(nextIndex);\n        setSelectedAnswer(null);\n        console.log(\"Demo mode: Moving to question\", nextIndex + 1);\n      } else {\n        // Show demo results\n        const demoResults = {\n          scores: [{\n            name: \"You\",\n            score: Math.floor(Math.random() * quiz.questions.length)\n          }, {\n            name: \"Demo Player 1\",\n            score: Math.floor(Math.random() * quiz.questions.length)\n          }, {\n            name: \"Demo Player 2\",\n            score: Math.floor(Math.random() * quiz.questions.length)\n          }],\n          totalQuestions: quiz.questions.length\n        };\n        demoResults.scores.sort((a, b) => b.score - a.score);\n        setQuizResults(demoResults);\n        setView('results');\n        console.log(\"Demo mode: Quiz finished, showing results\");\n      }\n      return;\n    }\n    if (nextIndex < quiz.questions.length) {\n      await updateDoc(doc(db, `/artifacts/${appId}/public/data/quizzes/${quizCode}`), {\n        currentQuestionIndex: nextIndex\n      });\n    } else {\n      await calculateAndShowResults();\n    }\n  };\n  const calculateAndShowResults = async () => {\n    const privateQuizDoc = await getDoc(doc(db, `/artifacts/${appId}/users/${quiz.createdBy}/quizzes/${quizCode}`));\n    if (!privateQuizDoc.exists()) {\n      console.error(\"Could not find original quiz data to calculate results.\");\n      return;\n    }\n    const correctAnswers = privateQuizDoc.data().questions.map(q => q.correctAnswer);\n    const answersSnapshot = await getDocs(collection(db, `/artifacts/${appId}/public/data/quizzes/${quizCode}/answers`));\n    const submittedAnswers = answersSnapshot.docs.map(d => d.data());\n    const publicQuizDoc = await getDoc(doc(db, `/artifacts/${appId}/public/data/quizzes/${quizCode}`));\n    const players = publicQuizDoc.data().players;\n    const scores = players.map(player => {\n      const playerScore = submittedAnswers.filter(ans => ans.userId === player.id && correctAnswers[ans.questionIndex] === ans.answer).length;\n      return {\n        name: player.name,\n        score: playerScore\n      };\n    });\n    scores.sort((a, b) => b.score - a.score);\n    await updateDoc(doc(db, `/artifacts/${appId}/public/data/quizzes/${quizCode}`), {\n      status: 'finished',\n      results: {\n        scores,\n        totalQuestions: quiz.questions.length\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-3xl mx-auto text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-800 p-8 rounded-lg shadow-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-cyan-400 font-bold\",\n          children: quiz.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-gray-700 text-white text-sm font-semibold px-3 py-1 rounded-full\",\n          children: [\"Question \", currentQuestionIndex + 1, \"/\", quiz.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold my-6 min-h-[80px]\",\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n        children: question.options.map((option, index) => {\n          const isSelected = selectedAnswer === index;\n          const isSubmitted = selectedAnswer !== null;\n          let buttonClass = \"bg-gray-700 hover:bg-gray-600\";\n          if (isSubmitted && isSelected) {\n            buttonClass = \"bg-yellow-500\";\n          } else if (isSubmitted) {\n            buttonClass = \"bg-gray-700 opacity-50\";\n          }\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswerSubmit(index),\n            disabled: isSubmitted,\n            className: `w-full text-left p-4 rounded-lg text-lg transition-all duration-200 ${buttonClass} disabled:cursor-not-allowed`,\n            children: option\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), isHost && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextQuestion,\n          className: \"bg-cyan-500 hover:bg-cyan-600 text-white font-bold py-3 px-8 rounded-lg text-lg\",\n          children: currentQuestionIndex === quiz.questions.length - 1 ? 'Finish & Show Results' : 'Next Question'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this), !isHost && selectedAnswer !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-8 text-gray-400\",\n        children: \"Your answer is submitted. Waiting for the host to proceed...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(QuizView, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = QuizView;\nvar _c;\n$RefreshReg$(_c, \"QuizView\");","map":{"version":3,"names":["React","useEffect","db","appId","doc","setDoc","getDoc","collection","getDocs","updateDoc","jsxDEV","_jsxDEV","QuizView","quiz","userId","quizCode","currentQuestionIndex","selectedAnswer","setSelectedAnswer","setCurrentQuiz","setView","setQuizResults","setCurrentQuestionIndex","_s","isHost","createdBy","status","questions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","question","handleAnswerSubmit","optionIndex","console","log","quizAnswersRef","answerDocId","questionIndex","answer","timestamp","Date","error","handleNextQuestion","nextIndex","length","updatedQuiz","demoResults","scores","name","score","Math","floor","random","totalQuestions","sort","a","b","calculateAndShowResults","privateQuizDoc","exists","correctAnswers","data","map","q","correctAnswer","answersSnapshot","submittedAnswers","docs","d","publicQuizDoc","players","player","playerScore","filter","ans","id","results","title","text","options","option","index","isSelected","isSubmitted","buttonClass","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Desktop/quiz app/src/views/QuizView.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { db, appId } from '../firebase/config';\r\nimport { doc, setDoc, getDoc, collection, getDocs, updateDoc } from 'firebase/firestore';\r\n\r\nexport const QuizView = ({ quiz, userId, quizCode, currentQuestionIndex, selectedAnswer, setSelectedAnswer, setCurrentQuiz, setView, setQuizResults, setCurrentQuestionIndex }) => {\r\n    const isHost = quiz?.createdBy === userId;\r\n\r\n    useEffect(() => {\r\n        setSelectedAnswer(null);\r\n    }, [currentQuestionIndex, setSelectedAnswer]);\r\n\r\n    if (!quiz || quiz.status === 'lobby' || !quiz.questions || !quiz.questions[currentQuestionIndex]) {\r\n        return <div className=\"text-center text-2xl\">Waiting for the quiz to start...</div>;\r\n    }\r\n    \r\n    const question = quiz.questions[currentQuestionIndex];\r\n\r\n    const handleAnswerSubmit = async (optionIndex) => {\r\n        setSelectedAnswer(optionIndex);\r\n        \r\n        // Handle demo mode - no Firebase operations\r\n        if (quizCode === 'DEMO' || quizCode === 'TEST') {\r\n            console.log(\"Demo mode: Answer submitted:\", optionIndex);\r\n            return;\r\n        }\r\n        \r\n        const quizAnswersRef = collection(db, `/artifacts/${appId}/public/data/quizzes/${quizCode}/answers`);\r\n        const answerDocId = `${userId}_q${currentQuestionIndex}`;\r\n        \r\n        try {\r\n            await setDoc(doc(quizAnswersRef, answerDocId), {\r\n                userId,\r\n                questionIndex: currentQuestionIndex,\r\n                answer: optionIndex,\r\n                timestamp: new Date(),\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error submitting answer:\", error);\r\n        }\r\n    };\r\n\r\n    const handleNextQuestion = async () => {\r\n        const nextIndex = currentQuestionIndex + 1;\r\n        \r\n        // Handle demo mode\r\n        if (quizCode === 'DEMO' || quizCode === 'TEST') {\r\n            if (nextIndex < quiz.questions.length) {\r\n                // Update the quiz state locally for demo mode\r\n                const updatedQuiz = { ...quiz, currentQuestionIndex: nextIndex };\r\n                setCurrentQuiz(updatedQuiz);\r\n                setCurrentQuestionIndex(nextIndex);\r\n                setSelectedAnswer(null);\r\n                console.log(\"Demo mode: Moving to question\", nextIndex + 1);\r\n            } else {\r\n                // Show demo results\r\n                const demoResults = {\r\n                    scores: [\r\n                        { name: \"You\", score: Math.floor(Math.random() * quiz.questions.length) },\r\n                        { name: \"Demo Player 1\", score: Math.floor(Math.random() * quiz.questions.length) },\r\n                        { name: \"Demo Player 2\", score: Math.floor(Math.random() * quiz.questions.length) }\r\n                    ],\r\n                    totalQuestions: quiz.questions.length\r\n                };\r\n                demoResults.scores.sort((a, b) => b.score - a.score);\r\n                setQuizResults(demoResults);\r\n                setView('results');\r\n                console.log(\"Demo mode: Quiz finished, showing results\");\r\n            }\r\n            return;\r\n        }\r\n        \r\n        if (nextIndex < quiz.questions.length) {\r\n            await updateDoc(doc(db, `/artifacts/${appId}/public/data/quizzes/${quizCode}`), {\r\n                currentQuestionIndex: nextIndex\r\n            });\r\n        } else {\r\n            await calculateAndShowResults();\r\n        }\r\n    };\r\n    \r\n    const calculateAndShowResults = async () => {\r\n        const privateQuizDoc = await getDoc(doc(db, `/artifacts/${appId}/users/${quiz.createdBy}/quizzes/${quizCode}`));\r\n        if (!privateQuizDoc.exists()) {\r\n            console.error(\"Could not find original quiz data to calculate results.\");\r\n            return;\r\n        }\r\n        const correctAnswers = privateQuizDoc.data().questions.map(q => q.correctAnswer);\r\n\r\n        const answersSnapshot = await getDocs(collection(db, `/artifacts/${appId}/public/data/quizzes/${quizCode}/answers`));\r\n        const submittedAnswers = answersSnapshot.docs.map(d => d.data());\r\n\r\n        const publicQuizDoc = await getDoc(doc(db, `/artifacts/${appId}/public/data/quizzes/${quizCode}`));\r\n        const players = publicQuizDoc.data().players;\r\n\r\n        const scores = players.map(player => {\r\n            const playerScore = submittedAnswers\r\n                .filter(ans => ans.userId === player.id && correctAnswers[ans.questionIndex] === ans.answer)\r\n                .length;\r\n            return { name: player.name, score: playerScore };\r\n        });\r\n\r\n        scores.sort((a, b) => b.score - a.score);\r\n\r\n        await updateDoc(doc(db, `/artifacts/${appId}/public/data/quizzes/${quizCode}`), {\r\n            status: 'finished',\r\n            results: { scores, totalQuestions: quiz.questions.length }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"w-full max-w-3xl mx-auto text-center\">\r\n            <div className=\"bg-gray-800 p-8 rounded-lg shadow-2xl\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                    <span className=\"text-cyan-400 font-bold\">{quiz.title}</span>\r\n                    <span className=\"bg-gray-700 text-white text-sm font-semibold px-3 py-1 rounded-full\">Question {currentQuestionIndex + 1}/{quiz.questions.length}</span>\r\n                </div>\r\n                <h2 className=\"text-3xl font-bold my-6 min-h-[80px]\">{question.text}</h2>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    {question.options.map((option, index) => {\r\n                        const isSelected = selectedAnswer === index;\r\n                        const isSubmitted = selectedAnswer !== null;\r\n                        \r\n                        let buttonClass = \"bg-gray-700 hover:bg-gray-600\";\r\n                        if (isSubmitted && isSelected) {\r\n                            buttonClass = \"bg-yellow-500\";\r\n                        } else if (isSubmitted) {\r\n                            buttonClass = \"bg-gray-700 opacity-50\";\r\n                        }\r\n\r\n                        return (\r\n                            <button\r\n                                key={index}\r\n                                onClick={() => handleAnswerSubmit(index)}\r\n                                disabled={isSubmitted}\r\n                                className={`w-full text-left p-4 rounded-lg text-lg transition-all duration-200 ${buttonClass} disabled:cursor-not-allowed`}\r\n                            >\r\n                                {option}\r\n                            </button>\r\n                        );\r\n                    })}\r\n                </div>\r\n                 {isHost && (\r\n                    <div className=\"mt-8\">\r\n                        <button onClick={handleNextQuestion} className=\"bg-cyan-500 hover:bg-cyan-600 text-white font-bold py-3 px-8 rounded-lg text-lg\">\r\n                            {currentQuestionIndex === quiz.questions.length - 1 ? 'Finish & Show Results' : 'Next Question'}\r\n                        </button>\r\n                    </div>\r\n                )}\r\n                {!isHost && selectedAnswer !== null && (\r\n                    <p className=\"mt-8 text-gray-400\">Your answer is submitted. Waiting for the host to proceed...</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}